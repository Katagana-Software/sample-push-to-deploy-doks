name: Build and Deploy to AKS

on:
  push:
    branches:
      - main

permissions:
  id-token: write   # for OIDC
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ”¹ Login to Azure with OIDC
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # ðŸ”¹ Login to ACR (OIDC already active from azure/login)
      - name: Login to ACR
        run: |
          az acr login --name acr6064

      # ðŸ”¹ Build & push Docker image
      - name: Build and Push image
        run: |
          IMAGE_TAG=acr6064.azurecr.io/demoapp:${{ github.sha }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      # ðŸ”¹ Get AKS credentials
      - name: Get AKS context
        run: |
          az aks get-credentials \
            --resource-group rg-aks-prod \
            --name aks-prod \
            --overwrite-existing

      # ðŸ”¹ Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/demoapp \
            demoapp=$IMAGE_TAG --record
